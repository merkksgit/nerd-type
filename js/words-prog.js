export const words = [
  // Control flow & keywords
  "if(x)",
  "else{",
  "for(i=0;",
  "while(true)",
  "try{",
  "catch(e)",
  "finally{",
  "switch(x)",
  "case 1:",
  "default:",
  "break;",
  "continue;",
  "return x;",
  "throw new",
  "async def",
  "await func",
  "yield x",
  "pass",
  "elif x:",
  "except:",

  // Function declarations
  "def func():",
  "function f()",
  "()=>{}",
  "lambda x:",
  "public void",
  "private int",
  "static main",
  "override",
  "virtual",
  "abstract",
  "final",
  "const f=()=>",
  "let x=",
  "var y=",

  // Object/Class syntax
  "class Name{",
  "new Object()",
  "this.prop",
  "super()",
  "extends Base",
  "implements",
  "interface I",
  "struct S{",
  "enum Color{",
  "public class",
  "private:",
  "protected:",
  "static final",
  "self.method",
  "__init__",
  "__str__",
  "constructor",

  // Array/List operations
  "[]",
  "[1,2,3]",
  "{a:1,b:2}",
  "list.append",
  "arr.push(x)",
  "arr.pop()",
  "arr.length",
  "len(arr)",
  "arr[0]",
  "arr.slice()",
  "arr.map(f)",
  "arr.filter",
  "arr.reduce",
  "dict.keys()",
  "dict.get()",
  "set.add(x)",
  "list.sort()",
  "arr.join()",

  // String operations
  "str.split()",
  "str.join()",
  "str.replace",
  "str.upper()",
  "str.lower()",
  "str.strip()",
  "str.length",
  "charAt(i)",
  "substring",
  "indexOf(x)",
  "startsWith",
  "endsWith",
  "str.trim()",
  "str.format",
  "f'{var}'",

  // Math & operators
  "Math.max()",
  "Math.min()",
  "Math.random",
  "Math.floor",
  "Math.ceil",
  "Math.round",
  "Math.abs(x)",
  "Math.sqrt",
  "Math.pow()",
  "x++",
  "++x",
  "x--",
  "x+=y",
  "x||y",
  "x&&y",
  "!x",
  "x===y",
  "x!==y",
  "x%y",
  "x**y",

  // Type operations
  "typeof x",
  "instanceof",
  "is None",
  "is not",
  "null",
  "undefined",
  "NaN",
  "true",
  "false",
  "bool(x)",
  "int(x)",
  "float(x)",
  "str(x)",
  "list(x)",
  "dict(x)",
  "set(x)",
  "tuple(x)",

  // I/O & console
  "print(x)",
  "console.log",
  "input()",
  "scanf()",
  "printf()",
  "cout<<",
  "cin>>",
  "System.out",
  "Console.Write",
  "readLine()",
  "alert(x)",
  "prompt()",
  "confirm()",

  // Error handling
  "try:",
  "except E:",
  "raise E",
  "assert x",
  "Error(msg)",
  "TypeError",
  "ValueError",
  "IndexError",
  "KeyError",
  "Exception",
  "finally:",
  "with open()",
  "using()",
  "dispose()",

  // Import/Export
  "import x",
  "from x import",
  "export {x}",
  "import {x}",
  "require(x)",
  "module.exp",
  "namespace",
  "using System",
  "include<>",
  "#include",
  "package",
  "import java",

  // Common patterns
  "i in range",
  "for x in y:",
  "forEach(x)",
  "map(f,arr)",
  "filter(f,x)",
  "reduce(f,x)",
  "zip(a,b)",
  "enumerate(x)",
  "range(10)",
  "xrange(10)",
  "sorted(x)",
  "reversed(x)",
  "sum(arr)",
  "max(arr)",
  "min(arr)",
  "any(arr)",
  "all(arr)",
  "len(x)",
  "count(x)",
  "find(x)",
  "replace(x,y)",
  "split(x)",
  "join(x)",
  "strip()",
  "lower()",
  "upper()",
  "capitalize",
  "title()",
  "isdigit()",
  "isalpha()",
  "islower()",
  "isupper()",
  "startswith",
  "endswith(x)",
  "contains(x)",
  "isEmpty()",
  "isNull()",
  "hasNext()",
  "next()",
  "close()",
  "flush()",
  "read()",
  "write(x)",
  "seek(pos)",
  "tell()",
  "readline()",
  "readlines()",
  "writelines",
];
